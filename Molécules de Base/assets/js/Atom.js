var camera, scene, renderer;
var controls;
var root;

var MOLECULES = {

    "CH4":"ATOM      1  C   CH3 A   1       0.000   0.000   0.000  1.00 10.00           C\nATOM      2  HC1 CH3 A   1      -0.421  -0.596  -0.843  1.00 10.00           H\nATOM      3  HC2 CH3 A   1       1.115   0.000   0.000  1.00 10.00           H\nATOM      4  HC3 CH3 A   1      -0.372   1.051   0.000  1.00 10.00           H\nATOM      5  HC4 CH3 A   1      -0.421  -0.596   0.843  1.00 10.00           H\nCONECT    1    2    3    4    5\nCONECT    2    1\nCONECT    3    1\nCONECT    4    1\nCONECT    5    1\nEND   \n",
    "CO2":"ATOM      1  C   CO2 A   1       0.000   0.000   0.000  1.00 10.00           C\nATOM      2  O1  CO2 A   1       0.000   0.000  -1.208  1.00 10.00           O\nATOM      3  O2  CO2 A   1       0.000   0.000   1.208  1.00 10.00           O\nCONECT    1    2    3\nCONECT    2    1\nCONECT    3    1\nEND   \n",
    "H2O":"COMPND    UNNAMED\nAUTHOR    GENERATED BY OPEN BABEL 2.3.0\nHETATM    1  O   HOH     1      13.765 -10.161   0.219  1.00  0.00           O  \nHETATM    2  H   HOH     0      14.573 -10.563  -0.108  1.00  0.00           H  \nHETATM    3  H   HOH     0      13.084 -10.813   0.039  1.00  0.00           H  \nCONECT    1    2    3                                                 \nCONECT    2    1                                                      \nCONECT    3    1                                                      \nMASTER        0    0    0    0    0    0    0    0    3    0    3    0\nEND\n",
    "C2H6":"COMPND    UNNAMED\nAUTHOR    GENERATED BY OPEN BABEL 2.3.0\nHETATM    1  C   LIG     1      13.510 -16.273  -0.028  1.00  0.00           C  \nHETATM    2  C   LIG     1      15.039 -16.240   0.000  1.00  0.00           C  \nHETATM    3  H   LIG     1      13.159 -16.280  -1.082  1.00  0.00           H  \nHETATM    4  H   LIG     1      13.150 -17.189   0.489  1.00  0.00           H  \nHETATM    5  H   LIG     1      13.111 -15.374   0.489  1.00  0.00           H  \nHETATM    6  H   LIG     1      15.428 -16.231  -1.041  1.00  0.00           H  \nHETATM    7  H   LIG     1      15.380 -15.324   0.530  1.00  0.00           H  \nHETATM    8  H   LIG     1      15.419 -17.139   0.530  1.00  0.00           H  \nCONECT    1    2    3    4    5                                       \nCONECT    1                                                           \nCONECT    2    1    6    7    8                                       \nCONECT    2                                                           \nCONECT    3    1                                                      \nCONECT    4    1                                                      \nCONECT    5    1                                                      \nCONECT    6    2                                                      \nCONECT    7    2                                                      \nCONECT    8    2                                                      \nMASTER        0    0    0    0    0    0    0    0    8    0    8    0\nEND\n",
    "NH3": "ATOM      1  N   NH3 A   1       0.000   0.067   0.000  1.00 10.00           N\nATOM      2  HN1 NH3 A   1       0.438  -0.312   0.825  1.00 10.00           H\nATOM      3  HN2 NH3 A   1       0.495  -0.312  -0.792  1.00 10.00           H\nATOM      4  HN3 NH3 A   1      -0.934  -0.312  -0.033  1.00 10.00           H\nCONECT    1    2    3    4\nCONECT    2    1\nCONECT    3    1\nCONECT    4    1\nEND   \n",
    "HL":"COMPND    UNNAMED\nAUTHOR    GENERATED BY OPEN BABEL 2.3.0\nHETATM    1 CL   LIG     1      12.417 -14.284  -0.354  1.00  0.00          Cl  \nHETATM    2  H   LIG     1      13.638 -14.271   0.326  1.00  0.00           H  \nCONECT    1    2                                                      \nCONECT    2    1                                                      \nMASTER        0    0    0    0    0    0    0    0    2    0    2    0\nEND\n",
};

var TITRES =
    {
        "CH4":"Méthane - CH<sub>4</sub>",
        "CO2":"Dioxyde de Carbone - CO<sub>2</sub>",
        "H2O":"Monoxyde de Dihydrogène - H<sub>2</sub>O",
        "C2H6":"Ethane - C<sub>2</sub>H<sub>6</sub>",
        "NH3":"Ammoniac - NH<sub>3</sub>",
        "HL":"Chlorure d'Hydrogène - HCl",


    };

var loader = new THREE.PDBLoader();
var menu = document.getElementsByClassName( "js-menu" )[0];
var container = document.getElementsByClassName("js-container")[0];
var title = document.getElementsByClassName("u-main-title");

window.visualizationType = 2;

init();
animate();

function init() {

    scene = new THREE.Scene();

    root = new THREE.Group();

    scene.add( root );

    camera = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 1, 10000 );

    camera.position.x = 1000;
    camera.position.y = 1000;
    camera.position.z = 0;

    camera.rotation.x = 1.5951;
    camera.rotation.y = 0.2161;
    camera.rotation.z = -1.6838;

    root.position.x = 0;
    root.position.y = 0;
    root.position.z = 0;



    scene.add( camera );

    scene.add(new THREE.AmbientLight(0xffffff,0.6));
    var light = new THREE.DirectionalLight(0x404040, 0.6);
    light.position.set(1,1,1);
    scene.add( light );
    var light = new THREE.DirectionalLight(0x404040, 0.6);
    light.position.set(1,1,-1);
    scene.add( light );
    var light = new THREE.DirectionalLight(0x404040, 0.5);
    light.position.set(1,-1,-1);
    scene.add( light );
    var light = new THREE.DirectionalLight(0x404040, 0.4);
    light.position.set(1,-0.5,-1);
    scene.add( light );
    var light = new THREE.DirectionalLight(0x404040, 0.3);
    light.position.set(1,-1,-0.5);
    scene.add( light );


    renderer = new THREE.WebGLRenderer( { antialias: true } );
    renderer.setClearColor( 0xffffff );
    renderer.setPixelRatio( window.devicePixelRatio );
    renderer.setSize( window.innerWidth, window.innerHeight );
    container.appendChild(renderer.domElement);

    controls = new THREE.OrthographicTrackballControls( camera, renderer.domElement);

    controls.enableDamping = true;
    controls.dynamicDampingFactor = 0.1;

    controls.enableZoom = false;
    controls.noZoom = true;
    controls.noPan = true;
    controls.enablePan = false;



    controls.rotateSpeed = 1;


    camera.updateProjectionMatrix();

    loadMolecule(MOLECULES[ "CH4" ] );
    createMenu();

    window.addEventListener( 'resize', onWindowResize, false );


}

function generateButtonCallback( data ,m) {

    return function ( event ) {



        console.log(camera.position, camera.rotation);
        loadMolecule( data );

        controls.reset();
        switch (m)
        {
            case "CH4":
            case "CO2":
                camera.position.x = 1000;
                camera.position.y = 1000;
                camera.position.z = 0;

                camera.rotation.x = 1.5951;
                camera.rotation.y = 0.2161;
                camera.rotation.z = -1.6838;
                break;

            case "NH3":
                camera.position.x = 693.3406;
                camera.position.y = 470.6198;
                camera.position.z = -1139.2083;

                camera.rotation.x = -2.7498;
                camera.rotation.y = 0.5123;
                camera.rotation.z = 2.9267;
                break;

            case "H2O":
                camera.position.x = -156.74976746128317;
                camera.position.y = 688.2711723065407;
                camera.position.z = -1225.4437170970396;

                camera.rotation.x = -2.629848681011361;
                camera.rotation.y = -0.11106703392773855;
                camera.rotation.z = 3.0145452418547083;
                break;

            case "C2H6":
                camera.position.x = 1003.9404;
                camera.position.y = 688.6003;
                camera.position.z = -719.6757;

                camera.rotation.x = -2.378;
                camera.rotation.y = 0.7893;
                camera.rotation.z = 2.8600;
                break;

        }

        $('.js-title').html(TITRES[m]);

    }


}

function createMenu() {
    var first = true;
    for ( var m in MOLECULES ) {
        var label = document.createElement( 'label' );
        if(first)
        {
            label.setAttribute("class", "o-choices__item is-selected");
            first = false;
        }
        else
        {
            label.setAttribute("class", "o-choices__item");
        }
        var input = document.createElement( 'input' );
        input.setAttribute("type","radio");
        input.setAttribute("name","model");
        input.setAttribute("value",m);


        var img = document.createElement('img');
        img.setAttribute("src","assets/png/basics/dvlp/"+m+".png");

        label.appendChild(img);
        label.appendChild(input);

        menu.appendChild( label );

        label.addEventListener( 'click', generateButtonCallback( MOLECULES[ m ],m ), false );
    }

    menu.appendChild( label );




}

//

function loadMolecule( data ) {
    clear();




    var json = loader.parsePDB( data );
    loader.createModel( json,

        function ( geometry, geometryBonds, json ) {

            var boxGeometry = new THREE.BoxGeometry( 1, 1, 1 );
            var sphereGeometry = new THREE.IcosahedronGeometry( 1, 2 );

            var offset = geometry.center();
            geometryBonds.translate( offset.x, offset.y, offset.z );

            for ( var i = 0; i < geometry.vertices.length; i ++ ) {

                var position = geometry.vertices[ i ];
                var color = geometry.colors[ i ];




                var material = new THREE.MeshPhongMaterial( { color: color } );
                var object = new THREE.Mesh( sphereGeometry, material );
                object.position.copy( position );
                object.position.multiplyScalar( 75 );
                object.scale.multiplyScalar( 25 );
                object.what_am_i = "atom";
                root.add(object);


                var atom = json.atoms[ i ];



            }

            for ( var i = 0; i < geometryBonds.vertices.length; i += 2 ) {

                var start = geometryBonds.vertices[ i ];
                var end = geometryBonds.vertices[ i + 1 ];

                start.multiplyScalar( 75 );
                end.multiplyScalar( 75 );



                var object = new THREE.Mesh( boxGeometry, new THREE.MeshPhongMaterial( 0xffffff ) );
                object.position.copy( start );
                object.position.lerp( end, 0.5 );
                object.scale.set( 5, 5, start.distanceTo( end ) );
                object.lookAt( end );
                object.what_am_i = "bond";
                root.add( object );


            }
            switch ( window.visualizationType ) {
                case 0:
                    showAtoms();
                    break;
                case 1:
                    showBonds();
                    break;
                case 2:
                    showAtomsBonds();
                    break;
            }

            render();


        }, function ( xhr ) {

            if ( xhr.lengthComputable ) {

                var percentComplete = xhr.loaded / xhr.total * 100;
                console.log( Math.round( percentComplete, 2 ) + '% downloaded' );

            }

        }, function ( xhr ) {

        } );

}

//

function onWindowResize() {

    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();

    renderer.setSize( window.innerWidth, window.innerHeight );


    render();

}

function animate() {

    requestAnimationFrame( animate );
    controls.update();

    render();

}

function render() {

    renderer.render( scene, camera );


}







function clear()
{
    while (root.children.length) root.remove(root.children[0]);
}

function showAtoms()
{

    for(var i = 0;i < root.children.length ; i++)
    {
        if(root.children[i].what_am_i == "atom")
        {
            root.children[i].visible = true;
        }
        if(root.children[i].what_am_i == "bond")
        {
            root.children[i].visible = false;
        }

    }

}
function showBonds()
{

    for(var i = 0;i < root.children.length ; i++)
    {
        if(root.children[i].what_am_i == "atom")
        {
            root.children[i].visible = false;
        }
        if(root.children[i].what_am_i == "bond")
        {
            root.children[i].visible = true;
        }
    }

}
function showAtomsBonds()
{

    for(var i = 0;i < root.children.length ; i++)
    {
        if(root.children[i].what_am_i == "atom" || root.children[i].what_am_i == "bond")
        {
            root.children[i].visible = true;
        }
    }

}